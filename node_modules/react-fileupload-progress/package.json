{
  "_args": [
    [
      {
        "raw": "react-fileupload-progress",
        "scope": null,
        "escapedName": "react-fileupload-progress",
        "name": "react-fileupload-progress",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/brenttaylorvale/Desktop/TimeLessLapse"
    ]
  ],
  "_from": "react-fileupload-progress@latest",
  "_id": "react-fileupload-progress@0.4.0",
  "_inCache": true,
  "_location": "/react-fileupload-progress",
  "_nodeVersion": "5.10.1",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/react-fileupload-progress-0.4.0.tgz_1474348605892_0.19107483932748437"
  },
  "_npmUser": {
    "name": "georgeosddev",
    "email": "georgeosddev@gmail.com"
  },
  "_npmVersion": "3.8.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-fileupload-progress",
    "scope": null,
    "escapedName": "react-fileupload-progress",
    "name": "react-fileupload-progress",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-fileupload-progress/-/react-fileupload-progress-0.4.0.tgz",
  "_shasum": "962ffc0022a8e96172eaaecd540a8d2324da3271",
  "_shrinkwrap": null,
  "_spec": "react-fileupload-progress",
  "_where": "/Users/brenttaylorvale/Desktop/TimeLessLapse",
  "author": {
    "name": "Takeharu.Oshida"
  },
  "browserify": {
    "transform": [
      [
        "babelify",
        {
          "compact": false,
          "presets": [
            "es2015",
            "stage-2",
            "react"
          ]
        }
      ]
    ]
  },
  "bugs": {
    "url": "https://github.com/georgeosddev/react-fileupload-progress/issues"
  },
  "dependencies": {
    "object-assign": "^4.1.0",
    "react": "^15.3.2",
    "react-dom": "^15.3.2",
    "sinon": "^1.17.6"
  },
  "description": "React component which render progress of fileupload",
  "devDependencies": {
    "babel-cli": "^6.14.0",
    "babel-core": "^6.14.0",
    "babel-eslint": "^6.1.2",
    "babel-loader": "^6.2.5",
    "babel-preset-es2015": "^6.14.0",
    "babel-preset-react": "^6.11.1",
    "babel-preset-stage-2": "^6.13.0",
    "babelify": "^7.3.0",
    "browserify": "^13.1.0",
    "browserify-istanbul": "^2.0.0",
    "chai": "^3.5.0",
    "eslint": "^3.5.0",
    "eslint-config-airbnb": "^11.1.0",
    "eslint-plugin-react": "^6.3.0",
    "express": "^4.14.0",
    "isparta": "^4.0.0",
    "karma": "^1.3.0",
    "karma-browserify": "^5.1.0",
    "karma-chai": "^0.1.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-cli": "^1.0.1",
    "karma-coverage": "^1.1.1",
    "karma-firefox-launcher": "^1.0.0",
    "karma-mocha": "^1.1.1",
    "karma-safari-launcher": "^1.0.0",
    "karma-spec-reporter": "0.0.26",
    "mocha": "^3.0.2",
    "multer": "^1.2.0",
    "react-addons-test-utils": "^15.3.2",
    "rimraf": "^2.5.4",
    "sinon": "^1.17.6",
    "watchify": "^3.7.0"
  },
  "directories": {},
  "dist": {
    "shasum": "962ffc0022a8e96172eaaecd540a8d2324da3271",
    "tarball": "https://registry.npmjs.org/react-fileupload-progress/-/react-fileupload-progress-0.4.0.tgz"
  },
  "gitHead": "e69f3a54830792e527beb161ec9dc6105fdf2b4f",
  "homepage": "https://github.com/georgeosddev/react-fileupload-progress",
  "keywords": [
    "react",
    "react-component",
    "fileupload",
    "progress"
  ],
  "license": "MIT",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "name": "georgeosddev",
      "email": "georgeosddev@gmail.com"
    }
  ],
  "name": "react-fileupload-progress",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "15.x",
    "react-dom": "15.x"
  },
  "readme": "# React-fileupload-progress [![Build Status](https://travis-ci.org/georgeOsdDev/react-fileupload-progress.svg?branch=develop)](https://travis-ci.org/georgeOsdDev/react-fileupload-progress) [![npm version](https://badge.fury.io/js/react-fileupload-progress.svg)](http://badge.fury.io/js/react-fileupload-progress)\n\n[![Gyazo](https://i.gyazo.com/581f05bc048cd38ea8e5a2f535b17bed.gif)](https://gyazo.com/581f05bc048cd38ea8e5a2f535b17bed)\n\nReact component of Input file and progress bar.\nThis component watch xhr uploading process, and trigger some events.\n\n## Installation\n\n```bash\nnpm install --save react-fileupload-progress\n```\n\n## API\n\n### `FileUploadProgress`\n\n#### Props\n\n* `url`: File upload endpoint url.\n  `React.PropTypes.string.isRequired`\n\n##### Events\n\n  These handler will called on XMLHttpRequest's progress events.\n  See also [Using XMLHttpRequest on MDN](https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest).\n\n* `onProgress`: Called when `xhr` was loaded. Third parameter is the progress of uploading process(0 ~ 100).\n  `React.PropTypes.func(e, request, progress)`\n\n* `onLoad`: Called when `xhr` was loaded.\n  `React.PropTypes.func(e, request)`\n\n* `onError`: Called when `xhr` become error.\n  `React.PropTypes.func(e, request)`\n\n* `onAbort`: Called when `xhr` was aborted.\n  `React.PropTypes.func(e, request)`\n\n##### Customization\n\n  It is possible to customize view and form.\n\n* `formRenderer`: For custom form rendering, **Typo is fixed(#4) from v0.2.0**\n  `onSubmitHandler` should be attach on your custom form's submit event. When `onSubmitHandler` is called, this component start observe `xhr`.\n  `React.PropTypes.func(onSubmitHandler)`\n\n* `formGetter`: If custom `formRenderer` is used, you need to implement this method and must return `FormData` object.\n  `React.PropTypes.func => {return form}`\n\n* `progressRenderer`: For custom progress rendering,\n  First parameter is the progress of uploading process(0 ~ 100).\n  If `xhr` has error, second parameter will be `true`.\n  When third parameter is called, current `xhr` will be aborted.\n  `React.PropTypes.func(progress, hasError, cancelHandler)`\n\n* `formCustomizer`: Called before `xhr` send. You can add any custom form parameter(e.g: id, name, etc) with this method. Must return `form` given as argument.\n  `React.PropTypes.func(form) => {return form}`\n\n* `beforeSend`: Called before `xhr` send. You can customize `xhr`(e.g: HTTPHeader, etc) with this method. Must return `request` given as argument.\n  `React.PropTypes.func(request) => {return request}`\n\n[![Gyazo](https://i.gyazo.com/f6428f29681c9aab16fc62771bb1980d.gif)](https://gyazo.com/f6428f29681c9aab16fc62771bb1980d)\n\n\n## Usage example\n\n```javascript\n'use strict';\n\nimport React from 'react';\nimport FileUploadProgress  from 'react-fileupload-progress';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <h3>Default style</h3>\n        <FileUploadProgress key='ex1' url='http://localhost:3000/api/upload'\n          onProgress={(e, request, progress) => {console.log('progress', e, request, progress);}}\n          onLoad={ (e, request) => {console.log('load', e, request);}}\n          onError={ (e, request) => {console.log('error', e, request);}}\n          onAbort={ (e, request) => {console.log('abort', e, request);}}\n          />\n      </div>\n    )\n  }\n};\n\nReact.render(<App/>, document.getElementById('out'));\n```\n\nSee also [example](https://github.com/georgeOsdDev/react-fileupload-progress/tree/develop/example)\n\n```bash\nnpm install\nnpm run start:example\n```\n\n## Build\n\n```bash\nnpm run build\n```\n\n## Tests\n\n```bash\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/georgeosddev/react-fileupload-progress.git"
  },
  "scripts": {
    "build": "babel src --out-dir lib",
    "clean": "rimraf lib",
    "start:example": "node example/server.js & npm run watch:example",
    "test": "karma start --browsers Firefox --single-run",
    "test:local": "karma start",
    "watch:example": "watchify example/app.js -dv -o example/bundle.js"
  },
  "version": "0.4.0"
}
